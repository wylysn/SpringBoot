<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.purang.SpringBoot.dao.UserDao" >
    <resultMap id="BaseResultMap" type="com.purang.SpringBoot.domain.UserEntity" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="userName" property="userName" jdbcType="VARCHAR" />
        <result column="passWord" property="passWord" jdbcType="VARCHAR" />
        <result column="user_sex" property="userSex" javaType="com.purang.SpringBoot.enums.UserSexEnum"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    </resultMap>
    
    <resultMap id="UserRolesPermissionsMap" type="com.purang.SpringBoot.domain.UserEntity" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="userName" property="userName" jdbcType="VARCHAR" />
        <result column="passWord" property="passWord" jdbcType="VARCHAR" />
        <result column="user_sex" property="userSex" javaType="com.purang.SpringBoot.enums.UserSexEnum"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
        <!-- 一个用户对应多个角色 -->
        <collection property="roleList" ofType="com.purang.SpringBoot.domain.SysRole">
        		<id column="role_id" property="id"/>
        		<result column="role_available" property="available"/>
        		<result column="role" property="role"/>
            	<result column="description" property="description"/>
            	<!-- 一个角色对应多个权限 -->
            	<collection property="permissions" ofType="com.purang.SpringBoot.domain.SysPermission">
            		<id column="permission_id" property="id"/>
            		<result column="permission_available"   property="available"/>
            		<result column="name"  property="name"/>
            		<result column="parent_id"  property="parentId"/>
            		<result column="parent_ids"  property="parentIds"/>
            		<result column="permission"  property="permission"/>
            		<result column="resource_type"  property="resourceType"/>
            		<result column="url"  property="url"/>
            	</collection>
         </collection>
    </resultMap>
    
    <sql id="Base_Column_List" >
        id, userName, passWord, user_sex, nick_name
    </sql>

    <select id="getAll" resultMap="BaseResultMap"  >
       SELECT 
       <include refid="Base_Column_List" />
	   FROM users
    </select>

    <select id="getOne" parameterType="java.lang.Long" resultMap="BaseResultMap" >
        SELECT 
       <include refid="Base_Column_List" />
	   FROM users
	   WHERE id = #{id}
    </select>
    
    <select id="getUserByName" parameterType="java.lang.String" resultMap="UserRolesPermissionsMap" >
       SELECT a.* 
		,c.id role_id
		,c.available role_available
		,c.description
		,c.role
		,e.id permission_id
		,e.available permission_available
		,e.name
		,e.parent_id
		,e.parent_ids
		,e.permission
		,e.resource_type
		,e.url
		FROM wyl.users a
		inner join wyl.sys_user_role b on b.uid=a.id
		inner join wyl.sys_role c on c.id=b.role_id
		left join wyl.sys_role_permission d on d.role_id=b.role_id
		left join wyl.sys_permission e on e.id=d.permission_id
		where a.userName = #{username}
    </select>

    <insert id="insert" parameterType="com.purang.SpringBoot.domain.UserEntity" >
       INSERT INTO 
       		users
       		(userName,passWord,user_sex) 
       	VALUES
       		(#{userName}, #{passWord}, #{userSex})
    </insert>
    
    <update id="update" parameterType="com.purang.SpringBoot.domain.UserEntity" >
       UPDATE 
       		users 
       SET 
       	<if test="userName != null">userName = #{userName},</if>
       	<if test="passWord != null">passWord = #{passWord},</if>
       	nick_name = #{nickName}
       WHERE 
       		id = #{id}
    </update>
    
    <delete id="delete" parameterType="java.lang.Long" >
       DELETE FROM
       		 users 
       WHERE 
       		 id =#{id}
    </delete>

</mapper>